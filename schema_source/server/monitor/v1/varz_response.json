{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://nats.io/schemas/definitions.json",
  "title": "io.nats.server.monitor.v1.varz",
  "description": "NATS Server VARZ Monitoring output",
  "type": "object",
  "properties": {
    "server_id": {
      "type": "string",
      "description": "The unique server ID generated at start"
    },
    "server_name": {
      "type": "string",
      "description": "The configured server name, equals ID when not set"
    },
    "version": {
      "type": "string",
      "description": "The version of the running server"
    },
    "proto": {
      "type": "integer",
      "description": "The protocol version this server supports"
    },
    "git_commit": {
      "type": "string",
      "description": "The git repository commit hash that the build corresponds with"
    },
    "go": {
      "type": "string",
      "description": "The version of Go used to build this binary"
    },
    "host": {
      "type": "string",
      "description": "The hostname the server runs on"
    },
    "port": {
      "type": "integer",
      "description": "The port the server listens on for client connections"
    },
    "auth_required": {
      "type": "boolean",
      "description": "Indicates if users are required to authenticate to join the server"
    },
    "tls_required": {
      "type": "boolean",
      "description": "Indicates if connections must use TLS when connecting to this server"
    },
    "tls_verify": {
      "type": "boolean",
      "description": "Indicates if full TLS verification will be performed"
    },
    "tls_ocsp_peer_verify": {
      "type": "boolean",
      "description": "Indicates if the OCSP protocol will be used to verify peers"
    },
    "ip": {
      "type": "string",
      "description": "The IP address the server listens on if set"
    },
    "connect_urls": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "The list of URLs NATS clients can use to connect to this server"
    },
    "ws_connect_urls": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "The list of URLs websocket clients can use to connect to this server"
    },
    "max_connections": {
      "$ref": "definitions.json#/definitions/golang_duration_nanos",
      "description": "The maximum amount of connections the server can accept"
    },
    "max_subscriptions": {
      "type": "integer",
      "description": "The maximum amount of subscriptions the server can manage"
    },
    "ping_interval": {
      "type": "number",
      "description": "The interval the server will send PING messages during periods of inactivity on a connection"
    },
    "ping_max": {
      "type": "integer",
      "description": "The number of unanswered PINGs after which the connection will be considered stale"
    },
    "http_host": {
      "type": "string",
      "description": "The HTTP host monitoring connections are accepted on"
    },
    "http_port": {
      "type": "integer",
      "description": "The port monitoring connections are accepted on"
    },
    "http_base_path": {
      "type": "string",
      "description": "The path prefix for access to monitor endpoints"
    },
    "https_port": {
      "type": "integer",
      "description": "The HTTPS port monitoring connections are accepted on"
    },
    "auth_timeout": {
      "type": "number",
      "description": "The amount of seconds connections have to complete authentication"
    },
    "max_control_line": {
      "type": "integer",
      "description": "The amount of bytes a signal control message may be"
    },
    "max_payload": {
      "type": "integer",
      "description": "The maximum amount of bytes a message may have as payload"
    },
    "max_pending": {
      "type": "integer",
      "description": "The maximum amount of unprocessed bytes a connection may have"
    },
    "cluster": {
      "$ref": "definitions.json#/definitions/cluster_opts_varz_v1"
    },
    "gateway": {
      "$ref": "definitions.json#/definitions/gateway_opts_varz_v1"
    },
    "leaf": {
      "$ref": "definitions.json#/definitions/leafnode_opts_varz_v1"
    },
    "mqtt": {
      "$ref": "definitions.json#/definitions/mqtt_opts_varz_v1"
    },
    "websocket": {
      "$ref": "definitions.json#/definitions/websocket_opts_varz_v1"
    },
    "jetstream": {
      "$ref": "definitions.json#/definitions/jetstream_varz_v1"
    },
    "tls_timeout": {
      "type": "number",
      "description": "How long TLS operations have to complete"
    },
    "write_deadline": {
      "$ref": "definitions.json#/definitions/golang_duration_nanos",
      "description": "The maximum time writes to sockets have to complete"
    },
    "start": {
      "type": "string",
      "description": "Time when the server was started"
    },
    "now": {
      "type": "string",
      "description": "The current time of the server"
    },
    "uptime": {
      "type": "string",
      "description": "How long the server has been running"
    },
    "mem": {
      "type": "integer",
      "description": "The resident memory allocation"
    },
    "cores": {
      "type": "integer",
      "description": "The number of cores the process has access to"
    },
    "gomaxprocs": {
      "type": "integer",
      "description": "The configured GOMAXPROCS value"
    },
    "gomemlimit": {
      "type": "integer",
      "description": "The configured GOMEMLIMIT value"
    },
    "cpu": {
      "type": "number",
      "description": "The current total CPU usage"
    },
    "connections": {
      "type": "integer",
      "description": "The current connected connections"
    },
    "total_connections": {
      "type": "integer",
      "description": "The total connections the server have ever handled"
    },
    "routes": {
      "type": "integer",
      "description": "The number of connected route servers"
    },
    "remotes": {
      "type": "integer",
      "description": "The configured route remote endpoints"
    },
    "leafnodes": {
      "type": "integer",
      "description": "The number connected leafnode clients"
    },
    "in_msgs": {
      "type": "integer",
      "description": "The number of messages this server received"
    },
    "out_msgs": {
      "type": "integer",
      "description": "The number of message this server sent"
    },
    "in_bytes": {
      "type": "integer",
      "description": "The number of bytes this server received"
    },
    "out_bytes": {
      "type": "integer",
      "description": "The number of bytes this server sent"
    },
    "slow_consumers": {
      "type": "integer",
      "description": "The total count of clients that were disconnected since start due to being slow consumers"
    },
    "subscriptions": {
      "type": "integer",
      "description": "The count of active subscriptions"
    },
    "http_req_stats": {
      "type": "object",
      "additionalProperties": {
        "type": "integer"
      },
      "description": "The number of requests each HTTP endpoint received"
    },
    "config_load_time": {
      "type": "string",
      "description": "The time the configuration was loaded or reloaded"
    },
    "config_digest": {
      "type": "string",
      "description": "A calculated hash of the current configuration"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "The tags assigned to the server in configuration"
    },
    "metadata": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "The metadata assigned to the server in configuration"
    },
    "trusted_operators_jwt": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "The JWTs for all trusted operators"
    },
    "trusted_operators_claim": {
      "type": "array",
      "items": {
        "type": "object"
      },
      "description": "The decoded claims for each trusted operator"
    },
    "system_account": {
      "type": "string",
      "description": "The name of the System account"
    },
    "pinned_account_fails": {
      "type": "integer",
      "description": "How often user logon fails due to the issuer account not being pinned"
    },
    "ocsp_peer_cache": {
      "$ref": "definitions.json#/definitions/ocsp_response_cache_varz_v1"
    },
    "slow_consumer_stats": {
      "$ref": "definitions.json#/definitions/slow_consumers_stats_v1"
    }
  }
}

